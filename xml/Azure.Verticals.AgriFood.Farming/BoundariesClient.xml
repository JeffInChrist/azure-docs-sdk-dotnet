<Type Name="BoundariesClient" FullName="Azure.Verticals.AgriFood.Farming.BoundariesClient">
  <TypeSignature Language="C#" Value="public class BoundariesClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundariesClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Verticals.AgriFood.Farming.BoundariesClient" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundariesClient" />
  <TypeSignature Language="F#" Value="type BoundariesClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> The Boundaries service client. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BoundariesClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of BoundariesClient for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundariesClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As FarmBeatsClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Verticals.AgriFood.Farming.BoundariesClient : Uri * Azure.Core.TokenCredential * Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions -&gt; Azure.Verticals.AgriFood.Farming.BoundariesClient" Usage="new Azure.Verticals.AgriFood.Farming.BoundariesClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Verticals.AgriFood.Farming.FarmBeatsClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint"> The endpoint of your FarmBeats resource (protocol and hostname, for example: https://{resourceName}.farmbeats.azure.net). </param>
        <param name="credential"> A credential used to authenticate to an Azure Service. </param>
        <param name="options"> The options for configuring the client. </param>
        <summary> Initializes a new instance of BoundariesClient. </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="endpoint" /> or <paramref name="credential" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCascadeDeleteJob">
      <MemberSignature Language="C#" Value="public virtual Azure.Operation&lt;BinaryData&gt; CreateCascadeDeleteJob (Azure.WaitUntil waitUntil, string jobId, string farmerId, string boundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Operation`1&lt;class System.BinaryData&gt; CreateCascadeDeleteJob(valuetype Azure.WaitUntil waitUntil, string jobId, string farmerId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.CreateCascadeDeleteJob(Azure.WaitUntil,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCascadeDeleteJob (waitUntil As WaitUntil, jobId As String, farmerId As String, boundaryId As String, Optional context As RequestContext = Nothing) As Operation(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member CreateCascadeDeleteJob : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;&#xA;override this.CreateCascadeDeleteJob : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; Azure.Operation&lt;BinaryData&gt;" Usage="boundariesClient.CreateCascadeDeleteJob (waitUntil, jobId, farmerId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Operation&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="jobId"> Job ID supplied by end user. </param>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="boundaryId"> ID of the boundary to be deleted. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Create a cascade delete job for specified boundary. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              farmerId: string,
              resourceId: string,
              resourceType: string,
              id: string,
              status: string,
              durationInSeconds: number,
              message: string,
              createdDateTime: string (ISO 8601 Format),
              lastActionDateTime: string (ISO 8601 Format),
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" />, <paramref name="farmerId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCascadeDeleteJobAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt; CreateCascadeDeleteJobAsync (Azure.WaitUntil waitUntil, string jobId, string farmerId, string boundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Operation`1&lt;class System.BinaryData&gt;&gt; CreateCascadeDeleteJobAsync(valuetype Azure.WaitUntil waitUntil, string jobId, string farmerId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.CreateCascadeDeleteJobAsync(Azure.WaitUntil,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateCascadeDeleteJobAsync (waitUntil As WaitUntil, jobId As String, farmerId As String, boundaryId As String, Optional context As RequestContext = Nothing) As Task(Of Operation(Of BinaryData))" />
      <MemberSignature Language="F#" Value="abstract member CreateCascadeDeleteJobAsync : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;&#xA;override this.CreateCascadeDeleteJobAsync : Azure.WaitUntil * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Operation&lt;BinaryData&gt;&gt;" Usage="boundariesClient.CreateCascadeDeleteJobAsync (waitUntil, jobId, farmerId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Operation&lt;System.BinaryData&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="jobId"> Job ID supplied by end user. </param>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="boundaryId"> ID of the boundary to be deleted. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Create a cascade delete job for specified boundary. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              farmerId: string,
              resourceId: string,
              resourceType: string,
              id: string,
              status: string,
              durationInSeconds: number,
              message: string,
              createdDateTime: string (ISO 8601 Format),
              lastActionDateTime: string (ISO 8601 Format),
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" />, <paramref name="farmerId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdate">
      <MemberSignature Language="C#" Value="public virtual Azure.Response CreateOrUpdate (string farmerId, string boundaryId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response CreateOrUpdate(string farmerId, string boundaryId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.CreateOrUpdate(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdate (farmerId As String, boundaryId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response&#xA;override this.CreateOrUpdate : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Response" Usage="boundariesClient.CreateOrUpdate (farmerId, boundaryId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer resource. </param>
        <param name="boundaryId"> ID of the boundary resource. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Creates or updates a boundary resource. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              farmerId: string,
              parentId: string,
              geometry: {
                type: "Point" | "Polygon" | "MultiPolygon" (required)
              },
              isPrimary: boolean,
              acreage: number,
              parentType: string,
              id: string,
              eTag: string,
              status: string,
              createdDateTime: string (ISO 8601 Format),
              modifiedDateTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              farmerId: string,
              parentId: string,
              geometry: {
                type: "Point" | "Polygon" | "MultiPolygon"
              },
              isPrimary: boolean,
              acreage: number,
              parentType: string,
              id: string,
              eTag: string,
              status: string,
              createdDateTime: string (ISO 8601 Format),
              modifiedDateTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; CreateOrUpdateAsync (string farmerId, string boundaryId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; CreateOrUpdateAsync(string farmerId, string boundaryId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.CreateOrUpdateAsync(System.String,System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateAsync (farmerId As String, boundaryId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.CreateOrUpdateAsync : string * string * Azure.Core.RequestContent * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundariesClient.CreateOrUpdateAsync (farmerId, boundaryId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer resource. </param>
        <param name="boundaryId"> ID of the boundary resource. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Creates or updates a boundary resource. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              farmerId: string,
              parentId: string,
              geometry: {
                type: "Point" | "Polygon" | "MultiPolygon" (required)
              },
              isPrimary: boolean,
              acreage: number,
              parentType: string,
              id: string,
              eTag: string,
              status: string,
              createdDateTime: string (ISO 8601 Format),
              modifiedDateTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              farmerId: string,
              parentId: string,
              geometry: {
                type: "Point" | "Polygon" | "MultiPolygon"
              },
              isPrimary: boolean,
              acreage: number,
              parentType: string,
              id: string,
              eTag: string,
              status: string,
              createdDateTime: string (ISO 8601 Format),
              modifiedDateTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Azure.Response Delete (string farmerId, string boundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response Delete(string farmerId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.Delete(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Delete (farmerId As String, boundaryId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member Delete : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.Delete : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="boundariesClient.Delete (farmerId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="boundaryId"> ID of the boundary. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Deletes a specified boundary resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteAsync (string farmerId, string boundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteAsync(string farmerId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.DeleteAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (farmerId As String, boundaryId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundariesClient.DeleteAsync (farmerId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="boundaryId"> ID of the boundary. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Deletes a specified boundary resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundaries">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetBoundaries (bool? isPrimary = default, string parentType = default, System.Collections.Generic.IEnumerable&lt;string&gt; parentIds = default, double? minAcreage = default, double? maxAcreage = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetBoundaries(valuetype System.Nullable`1&lt;bool&gt; isPrimary, string parentType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parentIds, valuetype System.Nullable`1&lt;float64&gt; minAcreage, valuetype System.Nullable`1&lt;float64&gt; maxAcreage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetBoundaries(System.Nullable{System.Boolean},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundaries (Optional isPrimary As Nullable(Of Boolean) = Nothing, Optional parentType As String = Nothing, Optional parentIds As IEnumerable(Of String) = Nothing, Optional minAcreage As Nullable(Of Double) = Nothing, Optional maxAcreage As Nullable(Of Double) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundaries : Nullable&lt;bool&gt; * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetBoundaries : Nullable&lt;bool&gt; * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="boundariesClient.GetBoundaries (isPrimary, parentType, parentIds, minAcreage, maxAcreage, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isPrimary" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="parentType" Type="System.String" />
        <Parameter Name="parentIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAcreage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAcreage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="isPrimary"> Is the boundary primary. </param>
        <param name="parentType"> Type of the parent it belongs to. </param>
        <param name="parentIds"> Parent Ids of the resource. </param>
        <param name="minAcreage"> Minimum acreage of the boundary (inclusive). </param>
        <param name="maxAcreage"> Maximum acreage of the boundary (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns a paginated list of boundary resources across all farmers. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  farmerId: string,
                  parentId: string,
                  geometry: {
                    type: "Point" | "Polygon" | "MultiPolygon"
                  },
                  isPrimary: boolean,
                  acreage: number,
                  parentType: string,
                  id: string,
                  eTag: string,
                  status: string,
                  createdDateTime: string (ISO 8601 Format),
                  modifiedDateTime: string (ISO 8601 Format),
                  name: string,
                  description: string,
                  properties: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              $skipToken: string,
              nextLink: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundariesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetBoundariesAsync (bool? isPrimary = default, string parentType = default, System.Collections.Generic.IEnumerable&lt;string&gt; parentIds = default, double? minAcreage = default, double? maxAcreage = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetBoundariesAsync(valuetype System.Nullable`1&lt;bool&gt; isPrimary, string parentType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parentIds, valuetype System.Nullable`1&lt;float64&gt; minAcreage, valuetype System.Nullable`1&lt;float64&gt; maxAcreage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetBoundariesAsync(System.Nullable{System.Boolean},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundariesAsync (Optional isPrimary As Nullable(Of Boolean) = Nothing, Optional parentType As String = Nothing, Optional parentIds As IEnumerable(Of String) = Nothing, Optional minAcreage As Nullable(Of Double) = Nothing, Optional maxAcreage As Nullable(Of Double) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundariesAsync : Nullable&lt;bool&gt; * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetBoundariesAsync : Nullable&lt;bool&gt; * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="boundariesClient.GetBoundariesAsync (isPrimary, parentType, parentIds, minAcreage, maxAcreage, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isPrimary" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="parentType" Type="System.String" />
        <Parameter Name="parentIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAcreage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAcreage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="isPrimary"> Is the boundary primary. </param>
        <param name="parentType"> Type of the parent it belongs to. </param>
        <param name="parentIds"> Parent Ids of the resource. </param>
        <param name="minAcreage"> Minimum acreage of the boundary (inclusive). </param>
        <param name="maxAcreage"> Maximum acreage of the boundary (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns a paginated list of boundary resources across all farmers. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  farmerId: string,
                  parentId: string,
                  geometry: {
                    type: "Point" | "Polygon" | "MultiPolygon"
                  },
                  isPrimary: boolean,
                  acreage: number,
                  parentType: string,
                  id: string,
                  eTag: string,
                  status: string,
                  createdDateTime: string (ISO 8601 Format),
                  modifiedDateTime: string (ISO 8601 Format),
                  name: string,
                  description: string,
                  properties: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              $skipToken: string,
              nextLink: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundariesByFarmerId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; GetBoundariesByFarmerId (string farmerId, bool? isPrimary = default, string parentType = default, System.Collections.Generic.IEnumerable&lt;string&gt; parentIds = default, double? minAcreage = default, double? maxAcreage = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; GetBoundariesByFarmerId(string farmerId, valuetype System.Nullable`1&lt;bool&gt; isPrimary, string parentType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parentIds, valuetype System.Nullable`1&lt;float64&gt; minAcreage, valuetype System.Nullable`1&lt;float64&gt; maxAcreage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetBoundariesByFarmerId(System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundariesByFarmerId (farmerId As String, Optional isPrimary As Nullable(Of Boolean) = Nothing, Optional parentType As String = Nothing, Optional parentIds As IEnumerable(Of String) = Nothing, Optional minAcreage As Nullable(Of Double) = Nothing, Optional maxAcreage As Nullable(Of Double) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundariesByFarmerId : string * Nullable&lt;bool&gt; * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.GetBoundariesByFarmerId : string * Nullable&lt;bool&gt; * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="boundariesClient.GetBoundariesByFarmerId (farmerId, isPrimary, parentType, parentIds, minAcreage, maxAcreage, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="isPrimary" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="parentType" Type="System.String" />
        <Parameter Name="parentIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAcreage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAcreage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="isPrimary"> Is the boundary primary. </param>
        <param name="parentType"> Type of the parent it belongs to. </param>
        <param name="parentIds"> Parent Ids of the resource. </param>
        <param name="minAcreage"> Minimum acreage of the boundary (inclusive). </param>
        <param name="maxAcreage"> Maximum acreage of the boundary (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns a paginated list of boundary resources under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  farmerId: string,
                  parentId: string,
                  geometry: {
                    type: "Point" | "Polygon" | "MultiPolygon"
                  },
                  isPrimary: boolean,
                  acreage: number,
                  parentType: string,
                  id: string,
                  eTag: string,
                  status: string,
                  createdDateTime: string (ISO 8601 Format),
                  modifiedDateTime: string (ISO 8601 Format),
                  name: string,
                  description: string,
                  properties: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              $skipToken: string,
              nextLink: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundariesByFarmerIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; GetBoundariesByFarmerIdAsync (string farmerId, bool? isPrimary = default, string parentType = default, System.Collections.Generic.IEnumerable&lt;string&gt; parentIds = default, double? minAcreage = default, double? maxAcreage = default, System.Collections.Generic.IEnumerable&lt;string&gt; ids = default, System.Collections.Generic.IEnumerable&lt;string&gt; names = default, System.Collections.Generic.IEnumerable&lt;string&gt; propertyFilters = default, System.Collections.Generic.IEnumerable&lt;string&gt; statuses = default, DateTimeOffset? minCreatedDateTime = default, DateTimeOffset? maxCreatedDateTime = default, DateTimeOffset? minLastModifiedDateTime = default, DateTimeOffset? maxLastModifiedDateTime = default, int? maxPageSize = default, string skipToken = default, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; GetBoundariesByFarmerIdAsync(string farmerId, valuetype System.Nullable`1&lt;bool&gt; isPrimary, string parentType, class System.Collections.Generic.IEnumerable`1&lt;string&gt; parentIds, valuetype System.Nullable`1&lt;float64&gt; minAcreage, valuetype System.Nullable`1&lt;float64&gt; maxAcreage, class System.Collections.Generic.IEnumerable`1&lt;string&gt; ids, class System.Collections.Generic.IEnumerable`1&lt;string&gt; names, class System.Collections.Generic.IEnumerable`1&lt;string&gt; propertyFilters, class System.Collections.Generic.IEnumerable`1&lt;string&gt; statuses, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxCreatedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; minLastModifiedDateTime, valuetype System.Nullable`1&lt;valuetype System.DateTimeOffset&gt; maxLastModifiedDateTime, valuetype System.Nullable`1&lt;int32&gt; maxPageSize, string skipToken, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetBoundariesByFarmerIdAsync(System.String,System.Nullable{System.Boolean},System.String,System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Double},System.Nullable{System.Double},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32},System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundariesByFarmerIdAsync (farmerId As String, Optional isPrimary As Nullable(Of Boolean) = Nothing, Optional parentType As String = Nothing, Optional parentIds As IEnumerable(Of String) = Nothing, Optional minAcreage As Nullable(Of Double) = Nothing, Optional maxAcreage As Nullable(Of Double) = Nothing, Optional ids As IEnumerable(Of String) = Nothing, Optional names As IEnumerable(Of String) = Nothing, Optional propertyFilters As IEnumerable(Of String) = Nothing, Optional statuses As IEnumerable(Of String) = Nothing, Optional minCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxCreatedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional minLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxLastModifiedDateTime As Nullable(Of DateTimeOffset) = Nothing, Optional maxPageSize As Nullable(Of Integer) = Nothing, Optional skipToken As String = Nothing, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundariesByFarmerIdAsync : string * Nullable&lt;bool&gt; * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.GetBoundariesByFarmerIdAsync : string * Nullable&lt;bool&gt; * string * seq&lt;string&gt; * Nullable&lt;double&gt; * Nullable&lt;double&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * seq&lt;string&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;DateTimeOffset&gt; * Nullable&lt;int&gt; * string * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="boundariesClient.GetBoundariesByFarmerIdAsync (farmerId, isPrimary, parentType, parentIds, minAcreage, maxAcreage, ids, names, propertyFilters, statuses, minCreatedDateTime, maxCreatedDateTime, minLastModifiedDateTime, maxLastModifiedDateTime, maxPageSize, skipToken, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="isPrimary" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="parentType" Type="System.String" />
        <Parameter Name="parentIds" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minAcreage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="maxAcreage" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="ids" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="names" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="propertyFilters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="statuses" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="minCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxCreatedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="minLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxLastModifiedDateTime" Type="System.Nullable&lt;System.DateTimeOffset&gt;" />
        <Parameter Name="maxPageSize" Type="System.Nullable&lt;System.Int32&gt;" />
        <Parameter Name="skipToken" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="isPrimary"> Is the boundary primary. </param>
        <param name="parentType"> Type of the parent it belongs to. </param>
        <param name="parentIds"> Parent Ids of the resource. </param>
        <param name="minAcreage"> Minimum acreage of the boundary (inclusive). </param>
        <param name="maxAcreage"> Maximum acreage of the boundary (inclusive). </param>
        <param name="ids"> Ids of the resource. </param>
        <param name="names"> Names of the resource. </param>
        <param name="propertyFilters">
            Filters on key-value pairs within the Properties object.
            eg. "{testKey} eq {testValue}".
            </param>
        <param name="statuses"> Statuses of the resource. </param>
        <param name="minCreatedDateTime"> Minimum creation date of resource (inclusive). </param>
        <param name="maxCreatedDateTime"> Maximum creation date of resource (inclusive). </param>
        <param name="minLastModifiedDateTime"> Minimum last modified date of resource (inclusive). </param>
        <param name="maxLastModifiedDateTime"> Maximum last modified date of resource (inclusive). </param>
        <param name="maxPageSize">
            Maximum number of items needed (inclusive).
            Minimum = 10, Maximum = 1000, Default value = 50.
            </param>
        <param name="skipToken"> Skip token for getting next set of results. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns a paginated list of boundary resources under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  farmerId: string,
                  parentId: string,
                  geometry: {
                    type: "Point" | "Polygon" | "MultiPolygon"
                  },
                  isPrimary: boolean,
                  acreage: number,
                  parentType: string,
                  id: string,
                  eTag: string,
                  status: string,
                  createdDateTime: string (ISO 8601 Format),
                  modifiedDateTime: string (ISO 8601 Format),
                  name: string,
                  description: string,
                  properties: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              $skipToken: string,
              nextLink: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundary">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetBoundary (string farmerId, string boundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetBoundary(string farmerId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetBoundary(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundary (farmerId As String, boundaryId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetBoundary : string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetBoundary : string * string * Azure.RequestContext -&gt; Azure.Response" Usage="boundariesClient.GetBoundary (farmerId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="boundaryId"> ID of the boundary. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Gets a specified boundary resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              farmerId: string,
              parentId: string,
              geometry: {
                type: "Point" | "Polygon" | "MultiPolygon"
              },
              isPrimary: boolean,
              acreage: number,
              parentType: string,
              id: string,
              eTag: string,
              status: string,
              createdDateTime: string (ISO 8601 Format),
              modifiedDateTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundaryAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetBoundaryAsync (string farmerId, string boundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetBoundaryAsync(string farmerId, string boundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetBoundaryAsync(System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBoundaryAsync (farmerId As String, boundaryId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundaryAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetBoundaryAsync : string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundariesClient.GetBoundaryAsync (farmerId, boundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the associated farmer. </param>
        <param name="boundaryId"> ID of the boundary. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Gets a specified boundary resource under a particular farmer. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              farmerId: string,
              parentId: string,
              geometry: {
                type: "Point" | "Polygon" | "MultiPolygon"
              },
              isPrimary: boolean,
              acreage: number,
              parentType: string,
              id: string,
              eTag: string,
              status: string,
              createdDateTime: string (ISO 8601 Format),
              modifiedDateTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCascadeDeleteJobDetails">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetCascadeDeleteJobDetails (string jobId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetCascadeDeleteJobDetails(string jobId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetCascadeDeleteJobDetails(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCascadeDeleteJobDetails (jobId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetCascadeDeleteJobDetails : string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetCascadeDeleteJobDetails : string * Azure.RequestContext -&gt; Azure.Response" Usage="boundariesClient.GetCascadeDeleteJobDetails (jobId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="jobId"> ID of the job. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Get cascade delete job for specified boundary. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              farmerId: string,
              resourceId: string,
              resourceType: string,
              id: string,
              status: string,
              durationInSeconds: number,
              message: string,
              createdDateTime: string (ISO 8601 Format),
              lastActionDateTime: string (ISO 8601 Format),
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCascadeDeleteJobDetailsAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetCascadeDeleteJobDetailsAsync (string jobId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetCascadeDeleteJobDetailsAsync(string jobId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetCascadeDeleteJobDetailsAsync(System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCascadeDeleteJobDetailsAsync (jobId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetCascadeDeleteJobDetailsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetCascadeDeleteJobDetailsAsync : string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundariesClient.GetCascadeDeleteJobDetailsAsync (jobId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="jobId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="jobId"> ID of the job. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Get cascade delete job for specified boundary. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              farmerId: string,
              resourceId: string,
              resourceType: string,
              id: string,
              status: string,
              durationInSeconds: number,
              message: string,
              createdDateTime: string (ISO 8601 Format),
              lastActionDateTime: string (ISO 8601 Format),
              startTime: string (ISO 8601 Format),
              endTime: string (ISO 8601 Format),
              name: string,
              description: string,
              properties: Dictionary&lt;string, AnyObject&gt;
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="jobId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="jobId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOverlap">
      <MemberSignature Language="C#" Value="public virtual Azure.Response GetOverlap (string farmerId, string boundaryId, string otherFarmerId, string otherBoundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response GetOverlap(string farmerId, string boundaryId, string otherFarmerId, string otherBoundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetOverlap(System.String,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOverlap (farmerId As String, boundaryId As String, otherFarmerId As String, otherBoundaryId As String, Optional context As RequestContext = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member GetOverlap : string * string * string * string * Azure.RequestContext -&gt; Azure.Response&#xA;override this.GetOverlap : string * string * string * string * Azure.RequestContext -&gt; Azure.Response" Usage="boundariesClient.GetOverlap (farmerId, boundaryId, otherFarmerId, otherBoundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="otherFarmerId" Type="System.String" />
        <Parameter Name="otherBoundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="boundaryId"> ID of the boundary. </param>
        <param name="otherFarmerId"> FarmerId of the other field. </param>
        <param name="otherBoundaryId"> ID of the other boundary. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns overlapping acreage between two boundary Ids. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              boundaryAcreage: number,
              otherBoundaryAcreage: number,
              intersectingAcreage: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" />, <paramref name="boundaryId" />, <paramref name="otherFarmerId" /> or <paramref name="otherBoundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetOverlapAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; GetOverlapAsync (string farmerId, string boundaryId, string otherFarmerId, string otherBoundaryId, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; GetOverlapAsync(string farmerId, string boundaryId, string otherFarmerId, string otherBoundaryId, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.GetOverlapAsync(System.String,System.String,System.String,System.String,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOverlapAsync (farmerId As String, boundaryId As String, otherFarmerId As String, otherBoundaryId As String, Optional context As RequestContext = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member GetOverlapAsync : string * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.GetOverlapAsync : string * string * string * string * Azure.RequestContext -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="boundariesClient.GetOverlapAsync (farmerId, boundaryId, otherFarmerId, otherBoundaryId, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="boundaryId" Type="System.String" />
        <Parameter Name="otherFarmerId" Type="System.String" />
        <Parameter Name="otherBoundaryId" Type="System.String" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="boundaryId"> ID of the boundary. </param>
        <param name="otherFarmerId"> FarmerId of the other field. </param>
        <param name="otherBoundaryId"> ID of the other boundary. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Returns overlapping acreage between two boundary Ids. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Response Body</c>:
            <code>{
              boundaryAcreage: number,
              otherBoundaryAcreage: number,
              intersectingAcreage: number
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" />, <paramref name="boundaryId" />, <paramref name="otherFarmerId" /> or <paramref name="otherBoundaryId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> or <paramref name="boundaryId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="Pipeline">
      <MemberSignature Language="C#" Value="public virtual Azure.Core.Pipeline.HttpPipeline Pipeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Azure.Core.Pipeline.HttpPipeline Pipeline" />
      <MemberSignature Language="DocId" Value="P:Azure.Verticals.AgriFood.Farming.BoundariesClient.Pipeline" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Pipeline As HttpPipeline" />
      <MemberSignature Language="F#" Value="member this.Pipeline : Azure.Core.Pipeline.HttpPipeline" Usage="Azure.Verticals.AgriFood.Farming.BoundariesClient.Pipeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Core.Pipeline.HttpPipeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; Search (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; Search(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.Search(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Search (content As RequestContent, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member Search : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.Search : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="boundariesClient.Search (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Search for boundaries across all farmers by fields and intersecting geometry. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              ids: [string],
              names: [string],
              propertyFilters: [string],
              statuses: [string],
              minCreatedDateTime: string (ISO 8601 Format),
              maxCreatedDateTime: string (ISO 8601 Format),
              minLastModifiedDateTime: string (ISO 8601 Format),
              maxLastModifiedDateTime: string (ISO 8601 Format),
              $maxPageSize: number,
              $skipToken: string,
              isPrimary: boolean,
              parentType: string,
              parentIds: [string],
              minAcreage: number,
              maxAcreage: number,
              intersectsWithGeometry: {
                type: "Point" | "Polygon" | "MultiPolygon" (required)
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  farmerId: string,
                  parentId: string,
                  geometry: {
                    type: "Point" | "Polygon" | "MultiPolygon"
                  },
                  isPrimary: boolean,
                  acreage: number,
                  parentType: string,
                  id: string,
                  eTag: string,
                  status: string,
                  createdDateTime: string (ISO 8601 Format),
                  modifiedDateTime: string (ISO 8601 Format),
                  name: string,
                  description: string,
                  properties: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              $skipToken: string,
              nextLink: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; SearchAsync (Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; SearchAsync(class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.SearchAsync(Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SearchAsync (content As RequestContent, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member SearchAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.SearchAsync : Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="boundariesClient.SearchAsync (content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Search for boundaries across all farmers by fields and intersecting geometry. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              ids: [string],
              names: [string],
              propertyFilters: [string],
              statuses: [string],
              minCreatedDateTime: string (ISO 8601 Format),
              maxCreatedDateTime: string (ISO 8601 Format),
              minLastModifiedDateTime: string (ISO 8601 Format),
              maxLastModifiedDateTime: string (ISO 8601 Format),
              $maxPageSize: number,
              $skipToken: string,
              isPrimary: boolean,
              parentType: string,
              parentIds: [string],
              minAcreage: number,
              maxAcreage: number,
              intersectsWithGeometry: {
                type: "Point" | "Polygon" | "MultiPolygon" (required)
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  farmerId: string,
                  parentId: string,
                  geometry: {
                    type: "Point" | "Polygon" | "MultiPolygon"
                  },
                  isPrimary: boolean,
                  acreage: number,
                  parentType: string,
                  id: string,
                  eTag: string,
                  status: string,
                  createdDateTime: string (ISO 8601 Format),
                  modifiedDateTime: string (ISO 8601 Format),
                  name: string,
                  description: string,
                  properties: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              $skipToken: string,
              nextLink: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchByFarmerId">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;BinaryData&gt; SearchByFarmerId (string farmerId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class System.BinaryData&gt; SearchByFarmerId(string farmerId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.SearchByFarmerId(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SearchByFarmerId (farmerId As String, content As RequestContent, Optional context As RequestContext = Nothing) As Pageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member SearchByFarmerId : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;&#xA;override this.SearchByFarmerId : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.Pageable&lt;BinaryData&gt;" Usage="boundariesClient.SearchByFarmerId (farmerId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Search for boundaries by fields and intersecting geometry. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              ids: [string],
              names: [string],
              propertyFilters: [string],
              statuses: [string],
              minCreatedDateTime: string (ISO 8601 Format),
              maxCreatedDateTime: string (ISO 8601 Format),
              minLastModifiedDateTime: string (ISO 8601 Format),
              maxLastModifiedDateTime: string (ISO 8601 Format),
              $maxPageSize: number,
              $skipToken: string,
              isPrimary: boolean,
              parentType: string,
              parentIds: [string],
              minAcreage: number,
              maxAcreage: number,
              intersectsWithGeometry: {
                type: "Point" | "Polygon" | "MultiPolygon" (required)
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  farmerId: string,
                  parentId: string,
                  geometry: {
                    type: "Point" | "Polygon" | "MultiPolygon"
                  },
                  isPrimary: boolean,
                  acreage: number,
                  parentType: string,
                  id: string,
                  eTag: string,
                  status: string,
                  createdDateTime: string (ISO 8601 Format),
                  modifiedDateTime: string (ISO 8601 Format),
                  name: string,
                  description: string,
                  properties: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              $skipToken: string,
              nextLink: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="SearchByFarmerIdAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;BinaryData&gt; SearchByFarmerIdAsync (string farmerId, Azure.Core.RequestContent content, Azure.RequestContext context = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class System.BinaryData&gt; SearchByFarmerIdAsync(string farmerId, class Azure.Core.RequestContent content, class Azure.RequestContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Verticals.AgriFood.Farming.BoundariesClient.SearchByFarmerIdAsync(System.String,Azure.Core.RequestContent,Azure.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SearchByFarmerIdAsync (farmerId As String, content As RequestContent, Optional context As RequestContext = Nothing) As AsyncPageable(Of BinaryData)" />
      <MemberSignature Language="F#" Value="abstract member SearchByFarmerIdAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;&#xA;override this.SearchByFarmerIdAsync : string * Azure.Core.RequestContent * Azure.RequestContext -&gt; Azure.AsyncPageable&lt;BinaryData&gt;" Usage="boundariesClient.SearchByFarmerIdAsync (farmerId, content, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Verticals.AgriFood.Farming</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;System.BinaryData&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="farmerId" Type="System.String" />
        <Parameter Name="content" Type="Azure.Core.RequestContent" />
        <Parameter Name="context" Type="Azure.RequestContext" />
      </Parameters>
      <Docs>
        <param name="farmerId"> ID of the farmer. </param>
        <param name="content"> The content to send as the body of the request. </param>
        <param name="context"> The request context, which can override default behaviors on the request on a per-call basis. </param>
        <summary> Search for boundaries by fields and intersecting geometry. </summary>
        <returns>To be added.</returns>
        <remarks>
            Schema for <c>Request Body</c>:
            <code>{
              ids: [string],
              names: [string],
              propertyFilters: [string],
              statuses: [string],
              minCreatedDateTime: string (ISO 8601 Format),
              maxCreatedDateTime: string (ISO 8601 Format),
              minLastModifiedDateTime: string (ISO 8601 Format),
              maxLastModifiedDateTime: string (ISO 8601 Format),
              $maxPageSize: number,
              $skipToken: string,
              isPrimary: boolean,
              parentType: string,
              parentIds: [string],
              minAcreage: number,
              maxAcreage: number,
              intersectsWithGeometry: {
                type: "Point" | "Polygon" | "MultiPolygon" (required)
              }
            }
            </code>
            Schema for <c>Response Body</c>:
            <code>{
              value: [
                {
                  farmerId: string,
                  parentId: string,
                  geometry: {
                    type: "Point" | "Polygon" | "MultiPolygon"
                  },
                  isPrimary: boolean,
                  acreage: number,
                  parentType: string,
                  id: string,
                  eTag: string,
                  status: string,
                  createdDateTime: string (ISO 8601 Format),
                  modifiedDateTime: string (ISO 8601 Format),
                  name: string,
                  description: string,
                  properties: Dictionary&lt;string, AnyObject&gt;
                }
              ],
              $skipToken: string,
              nextLink: string
            }
            </code>
            Schema for <c>Response Error</c>:
            <code>{
              error: {
                code: string,
                message: string,
                target: string,
                details: [Error],
                innererror: {
                  code: string,
                  innererror: InnerError
                }
              },
              traceId: string
            }
            </code></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="farmerId" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="farmerId" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
